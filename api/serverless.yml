# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: lanea
# "service" is the name of this project. This will also be added to your AWS resource names.
service: api

stages:
  default:
    params:
      tableName: "orders-table-${sls:stage}"
package:
  exclude:
    - node_modules/**
    - venv/**
    - __pycache__/**
    - .env
    
plugins:
  - serverless-wsgi
  - serverless-python-requirements
  - serverless-dynamodb
  - serverless-offline
custom:
  wsgi:
    app: app.app

provider:
  name: aws
  runtime: python3.12
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [OrdersTable, Arn]
  environment:
    ORDERS_TABLE: ${param:tableName}

functions:
  orders-api:
    handler: wsgi_handler.handler
    events:
      - http:
          path: /order/
          method: ANY
      - http:
          path: /order/{proxy+}
          method: ANY
  monitor-api:
    handler: wsgi_handler.handler
    events:
      - http:
          path: /monitor/
          method: ANY
      - http:
          path: /monitor/{proxy+}
          method: ANY
resources:
  Resources:
    OrdersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: order_id
            AttributeType: S
        KeySchema:
          - AttributeName: order_id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${param:tableName}
